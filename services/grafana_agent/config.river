logging {
  level  = "info"
  format = "logfmt"
}

local.file "agent_token" {
  filename = "/etc/agent/agent_token"
  is_secret = true
}

discovery.process "default" {}

prometheus.exporter.unix "default" {}

prometheus.exporter.self "agent" {}

prometheus.exporter.postgres "acsp_db" {
  data_source_names = [env("ACSP_DB_URL")]
}

prometheus.exporter.postgres "auth_db" {
  data_source_names = [env("AUTH_DB_URL")]
}

prometheus.scrape "process" {
  job_name = "process"
  targets = discovery.process.default.targets
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.scrape "unix" {
  job_name = "unix"
  targets = prometheus.exporter.unix.default.targets
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.scrape "agent" {
  job_name = "agent"
  targets = prometheus.exporter.self.agent.targets
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.scrape "acsp_db" {
  job_name = "acsp_db"
  targets = prometheus.exporter.postgres.acsp_db.targets
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.scrape "auth_db" {
  job_name = "auth_db"
  targets = prometheus.exporter.postgres.auth_db.targets
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.scrape "grafana" {
  job_name = "grafana"
  targets = [
    { "__address__" = "acsp-grafana:3000" },
  ]
  metrics_path = "/metrics"
  basic_auth {
    username = "agent_user"
    password_file = "/etc/agent/agent_token"
  }
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.remote_write "default" {
  endpoint {
    url = "http://acsp-prometheus:9090/api/v1/write"

    basic_auth {
      username = "agent_user"
      password = local.file.agent_token.content
    }
  }
}